webpackJsonp([2,16],{"splunkjs/mvc/debugger":function(n,e,t){var o;o=function(n,e,o){var i=t("require/underscore"),r=t("require/backbone"),a=t("splunkjs/mvc/basemanager"),s=t("splunkjs/mvc/basesplunkview"),g=t("splunkjs/mvc/basetokenmodel"),u=t("splunkjs/mvc/searchmodel"),c=window.console,l=function(n){for(var e="",t=0;t<n;t++)e+="    ";return e},p=function(n){return"WARNING: "+n},f={MANAGER:"manager",VIEW:"view",NAMESPACE:"namespace",UNKNOWN:"unknown"},d=r.Model.extend({ready:!1,initialize:function(){var n=this;return n.registry=n.get("registry"),n.registry?void c.log("The Splunkjs debugger is running. For help, enter 'splunkjs.mvc.Debugger.help()'"):void c.log("splunk.mvc debugging interface could not find the registry")},isReady:function(){return this.ready},getDebugData:function(){var n=this,e=[],t=n.registry.getInstanceNames();i.each(t,function(t){var o=n.registry.getInstance(t),r=n._getComponentType(o),a=n._getComponentCategory(o),s=[],g={id:t,category:a,type:r,warnings:[]};if(a===f.VIEW){var u=null,c={};s=n._getValidViewOptions(o),o.settings&&(u=o.settings.get("managerid")||null,c=i.clone(o.settings.attributes),i.each(i.keys(c),function(n){if(!i.contains(s,n)){var e=n.split(".")[0];"mapping"!==e&&"charting"!==e&&g.warnings.push(p(n+" is not a recognized setting."))}})),g.managerid=u,g.settings=c,g.el=o.el||"no element set"}if(a===f.NAMESPACE&&(g.tokens=[],i.each(o.attributes,function(n,e){var t={name:e,value:n,listenerIds:[]};g.tokens.push(t)})),a===f.MANAGER){if(s=n._getValidManagerOptions(o),o.attributes){var l=i.clone(o.attributes);i.each(i.keys(l),function(n){i.contains(s,n)||g.warnings.push(p(n+" is not a recognized attribute"))})}g.attributes=o.attributes,g.query=o.query,g.search=o.search}a!==f.NAMESPACE&&(g.bindings=n._getComponentBindings(t)),e.push(g)});var o=i.where(e,{category:f.MANAGER}),r=i.where(e,{category:f.VIEW}),a=i.where(e,{category:f.NAMESPACE});return i.each(o,function(n){n.viewIds=i.pluck(i.where(r,{managerid:n.id}),"id"),n.viewIds.length<1&&n.warnings.push(p("no views bound to search manager."))}),i.each(r,function(n){n.managerid&&(i.contains(i.pluck(o,"id"),n.managerid)||n.warnings.push(p(n.managerid+" is not a registered manager.")))}),i.each(a,function(n){i.each(n.tokens,function(e){var t=i.filter(i.union(o,r),function(t){return i.some(t.bindings,function(t){if(t&&t.observes&&t.observes.length>0)return i.some(t.observes,function(t){return t.namespace===n.id&&t.name===e.name})})});e.listenerIds=i.pluck(t,"id")})}),e},_getValidViewOptions:function(n){var e=["id","name","managerid","manager","app","el","data"];return n.constructor.prototype.options&&(e=i.union(e,i.keys(n.constructor.prototype.options))),e},_getValidManagerOptions:function(n){var e=i.union(["app","id","owner","name","data"],i.keys(n.constructor.prototype.defaults)||[],u.SearchSettingsModel.ALLOWED_ATTRIBUTES);return e},_getComponentType:function(n){var e="Unknown type";if(n.moduleId){var t=n.moduleId.split("/").pop();t.length>0&&(e=t)}return e},_getComponentCategory:function(n){var e=f.UNKNOWN;return n instanceof s?e=f.VIEW:n instanceof a?e=f.MANAGER:n instanceof g&&(e=f.NAMESPACE),e},_getComponentTokenBoundProperties:function(n){var e=[],t=this._getComponentBindings(n);return e=i.keys(t)},_getComponentBindings:function(n){var e=this.registry.getInstance(n),t={};return e&&e.settings&&(t=i.extend(t,i.clone(e.settings._bindings))),t},createError:function(n){return n},printViewInfo:function(){var n=this,e=n.getInfoForViews();c.log("Views:"),i.each(e,function(n){c.log(l(1)+"ID: "+n.id),c.log(l(2)+"Type: "+n.type),c.log(l(2)+"Manager: "+n.managerid),c.log(l(2)+"Element: ",n.el),c.log(l(2)+"Settings: "),i.each(i.keys(n.settings),function(e){var t="",o=n.bindings[e],i=o&&o.observes&&o.observes.length>0;if(i){var r=JSON.stringify(o.template),a=JSON.stringify(o.computeValue(!0));t=" [bound: "+r+", resolved: "+a+"]"}c.log(l(3)+e+": "+JSON.stringify(n.settings[e])+t)}),n.warnings.length>0&&(c.log(l(2)+"WARNINGS: "),i.each(n.warnings,function(n){c.log(l(3)+n)}))})},printSearchManagerInfo:function(){var n=this,e=n.getInfoForManagers();c.log("Search Managers:"),i.each(e,function(n){if(c.log(l(1)+"ID: "+n.id),c.log(l(2)+"Type: "+n.type),n.attributes){c.log(l(2)+"Attributes: ");var e=u.SearchSettingsModel.ALLOWED_ATTRIBUTES;i.each(n.attributes,function(n,t){i.contains(e,t)||c.log(l(3)+t+": "+JSON.stringify(n))})}n.settings&&n.settings.attributes&&(c.log(l(2)+"Search Properties: "),i.each(n.settings.attributes,function(e,t){var o="",i=n.bindings[t],r=i&&i.observes&&i.observes.length>0;if(r){var a=JSON.stringify(i.template),s=JSON.stringify(i.computeValue(!0));o=" [bound: "+a+", resolved: "+s+"]"}c.log(l(3)+t+": "+JSON.stringify(e)+o)})),c.log(l(2)+"Views bound to manager: "),i.each(n.viewIds,function(n){c.log(l(3)+n)}),n.warnings.length>0&&(c.log(l(2)+"WARNINGS: "),i.each(n.warnings,function(n){c.log(l(3)+n)}))})},printTokenNamespaceInfo:function(){var n=this,e=n.getInfoForNamespaces();c.log("Token Namespaces:"),i.each(e,function(n){c.log(l(1)+"ID: "+n.id),c.log(l(2)+"Type: "+n.type),c.log(l(2)+"Tokens: "),i.each(n.tokens,function(n){c.log(l(3)+n.name+": "),c.log(l(4)+"value: "+JSON.stringify(n.value)),c.log(l(4)+"listeners: "+n.listenerIds.join(", "))})})},printComponentInfo:function(){this.printViewInfo(),this.printSearchManagerInfo(),this.printTokenNamespaceInfo()},printWarnings:function(){var n=this,e=n.getDebugData();c.log("WARNINGS:"),i.each(e,function(n){n.warnings.length>0&&(c.log(l(1),"ID: "+n.id+": "),i.each(n.warnings,function(n){c.log(l(2)+n)}))})},_getInfoForComponents:function(n){var e=this.getDebugData();return void 0!==n?i.where(e,{category:f[n]}):e},getInfoForViews:function(){return this._getInfoForComponents("VIEW")},getInfoForManagers:function(){return this._getInfoForComponents("MANAGER")},getInfoForNamespaces:function(){return this._getInfoForComponents("NAMESPACE")},help:function(){c.log("Splunkjs Debugger Commands"),c.log(l(1)+"- printWarnings(): Prints all warnings to the console."),c.log(l(1)+"- printComponentInfo(): Prints all debug info and warnings to the console by component."),c.log(l(1)+"- printViewInfo(): Prints debug info for all Splunk views."),c.log(l(1)+"- printSearchManagerInfo(): Prints debug info for all Splunk search managers."),c.log(l(1)+"- printTokenNamespaceInfo(): Prints debug info for Splunk token namespaces."),c.log(l(1)+"- getDebugData(): Returns all debug metadata for components and namespaces."),c.log(l(1)+"- getInfoForViews(): Returns debug metadata for all Splunk views."),c.log(l(1)+"- getInfoForManagers(): Returns debug metadata for all Splunk managers."),c.log(l(1)+"- getInfoForNamespaces(): Returns debug metadata for all Splunk token namespaces.")}});return d}.call(e,t,e,n),!(void 0!==o&&(n.exports=o))}});